
#ifndef _SHADER_SEMANTICS_H_
#define _SHADER_SEMANTICS_H_

enum class _VALUESEMANTIC_SPEC
{
	VALSEM_NON=-1,
	VALSEM_VERTEX,
	VALSEM_NORMAL,
	VALSEM_BINORMAL,
	VALSEM_TANGENT,
	VALSEM_TEXCOORD0,
	VALSEM_TEXCOORD1,
	VALSEM_WEIGHTOFS,
	VALSEM_VERTEXID,
	VALSEM_COLOR,

	VALSEM_INVVIEWPROJWORLDMX,
	VALSEM_INVVIEWWORLDMX,
	VALSEM_WORLDVIEWPROJMX,
	VALSEM_VIEWWORLDMX,
	VALSEM_PROJVIEWWORLDMX,
	VALSEM_VIEWMX,
	VALSEM_PROJMX,
	VALSEM_UIPROJMX,
	VALSEM_PROJVIEWMX,
	VALSEM_WORLDMX,

	VALSEM_VIEWDIRMX,
	VALSEM_VIEWINVMX,
	VALSEM_VIEWDIR,
	VALSEM_VIEWPOS,

	VALSEM_TEXTURE,
	VALSEM_SAMPLER,
	VALSEM_SAMPLER0,
	VALSEM_SAMPLER1,
	VALSEM_NORMALMAP,
	VALSEM_SHADOWMAPS,

	VALSEM_WEIGHTS,
	VALSEM_WEIGHTTEX,
	VALSEM_WEIGHTSIZE,
	VALSEM_BONES,
	
	VALSEM_SHADOW_PROJWORLDMX,
	VALSEM_LIGHT_VIEWPROJWORLDMX,

	VALSEM_VEC4_MODEL_A,

	VALSEM_VEC4ARRAYL1,

	VALSEM_LIGHTVIEWPOS,
	VALSEM_LIGHTNUM,
	VALSEM_LIGHTPOSCONE,
	VALSEM_LIGHTCOLORPOWER,
	VALSEM_LIGHTDIRSPREAD,
	VALSEM_LIGHTSPECMXARRAY,
	VALSEM_LIGHTSPECMX,	
	VALSEM_VECTOR2_A,
	VALSEM_FLOAT_A,
	
	VALSEM_MESH_VEC2_A,
	VALSEM_MESH_VEC2_B,
	VALSEM_MESH_VEC2_C,

	VALSEM_MESH_VEC3_A,
	VALSEM_MESH_VEC3_B,
	VALSEM_MESH_VEC3_C,

	VALSEM_MESH_VEC4_A,
	VALSEM_MESH_VEC4_B,
	VALSEM_MESH_VEC4_C,

	VALSEM_MESH_REF_VEC4_A,

	VALSEM_MESH_UIREC_VEC4,
	VALSEM_MESH_TEX_VEC4,

	VALSEM_LASTSEM
};

enum _VALUESEMANTIC_TYPE
{
	VALTYPE_NON,
	VALTYPE_MATRIX4X4,
	VALTYPE_VEC4,
	VALTYPE_REF_VEC4,
	VALTYPE_VEC2,
	VALTYPE_VEC3,
	VALTYPE_FLOAT,
	VALTYPE_SAMPLER,
	VALTYPE_TEXTURE
};

enum _VALUESEMANTIC_LEVEL
{
	_VALUE_LEVEL_NON=-1,
	_VALUE_LEVEL_ENGINE,
	_VALUE_LEVEL_MODEL,
	_VALUE_LEVEL_MESH,
	_VALUE_LEVEL_OTHER
};

struct _VALUE_SEMANTIC
{
	_VALUESEMANTIC_SPEC SpecName;
	_VALUESEMANTIC_TYPE ValType;
	_VALUESEMANTIC_LEVEL ValLevel;
	const char* name;
};

class ShaderSemantics{
public:
	struct _item_info {
		int part_size;
		int part_count;

		_item_info(){
			part_size = 0;
			part_count = 0;
		}

		_item_info(int s,int c){
			part_size = s;
			part_count = c;
		}
	};

	static _VALUE_SEMANTIC* values;
	static _item_info* vert_def;
};

#endif